@startuml godev-architecture
!define RECTANGLE class

title GoDev - Arquitectura del Sistema

package "Core Application" {
    RECTANGLE Handler {
        - rootDir: string
        - config: *AutoConfig
        - Translator: *TinyTranslator
        - tui: *DevTUI
        - serverHandler: *ServerHandler
        - assetsHandler: *AssetMin
        - wasmHandler: *TinyWasm
        - watcher: *WatchHandler
        - browser: *Browser
        - exitChan: chan bool
        --
        + GodevStart(rootDir, logger)
        + NewBrowser()
        + AddSectionBUILD()
    }
}

package "Configuration Management" {
    RECTANGLE AutoConfig {
        - rootDir: string
        - logger: func(messages ...any)
        - AppName: string
        - Types: []string
        - HasConsole: bool
        - WebType: string
        --
        + ScanDirectoryStructure()
        + GetServerPort() string
        + GetWebServerFileName() string
        + GetCMDFileName() string
        + NewFolderEvent()
        + SetRootDir()
    }
    
    RECTANGLE Logger {
        --
        + LogToFile(messages ...any)
    }
}

package "Server Management" {
    RECTANGLE ServerHandler {
        - ServerConfig: *ServerConfig
        - mainFileExternalServer: string
        - internalServerRun: bool
        - server: *http.Server
        - goCompiler: *GoBuild
        - goRun: *GoRun
        --
        + Start()
        + NewFileEvent()
        + StartInternalServerFiles()
        + StartExternalServer()
        + RestartServer()
    }
    
    RECTANGLE GoRun {
        - ExecProgramPath: string
        - Arguments: []string
        --
        + RunProgram()
        + StopProgram()
    }
}

package "File Watching" {
    RECTANGLE WatchHandler {
        - WatchConfig: *WatchConfig
        - watcher: *fsnotify.Watcher
        - no_add_to_watch: map[string]bool
        --
        + FileWatcherStart()
        + RegisterFiles()
        + watchEvents()
    }
      interface FolderEvent {
        + NewFolderEvent(folderName, path, event string) error
    }
    
    interface FileEvent {
        + NewFileEvent(fileName, extension, filePath, event string) error
    }
    
    RECTANGLE GoFileType {
        - FrontendPrefix: []string
        - FrontendFiles: []string
        - BackendPrefix: []string
        - BackendFiles: []string
        --
        + GoFileIsType(filename string) (bool, bool)
    }
}

package "Browser Automation" {
    RECTANGLE Browser {
        - Width: int
        - Height: int
        - Position: string
        - isOpen: bool
        - Context: context.Context
        - CancelFunc: context.CancelFunc
        --
        + OpenBrowser()
        + CloseBrowser()
        + Reload()
        + setBrowserPositionAndSize()
    }
}

package "External Dependencies" {
    RECTANGLE DevTUI <<cdvelop/devtui>> {
        --
        + InitTUI()
        + Print()
        + NewTabSection()
        + AddFields()
        + HandleInput()
    }
    
    RECTANGLE AssetMin <<cdvelop/assetmin>> {
        --
        + NewFileEvent()
        + UnobservedFiles()
        + GetRuntimeInitializerJS()
        + ProcessAssets()
    }
    
    RECTANGLE TinyWasm <<cdvelop/tinywasm>> {
        --
        + CompileMainModule()
        + SetTinyGoCompiler()
        + JavascriptForInitializing()
        + NewFileEvent()
    }
    
    RECTANGLE GoBuild <<cdvelop/gobuild>> {
        --
        + CompileProgram()
        + Cancel()
        + IsCompiling()
    }
    
    RECTANGLE TinyTranslator <<cdvelop/tinytranslator>> {
        --
        + Internationalization
        + Message Translation
    }
    
    RECTANGLE MessageType <<cdvelop/messagetype>> {
        --
        + Message Types
        + Communication Protocols
    }
    
    RECTANGLE TinyString <<cdvelop/tinystring>> {
        --
        + String Utilities
        + Text Processing
    }
    
    RECTANGLE ChromeDP {
        --
        + Run()
        + Navigate()
    }
    
    RECTANGLE FSNotify {
        --
        + NewWatcher()
        + Add()
        + Events
    }
}

' Relationships
Handler ||--|| AutoConfig : uses
Handler ||--|| ServerHandler : orchestrates
Handler ||--|| TinyWasm : controls
Handler ||--|| AssetMin : handles
Handler ||--|| WatchHandler : coordinates
Handler ||--|| Browser : automates
Handler ||--|| DevTUI : interfaces

AutoConfig ||--|| Logger : uses

ServerHandler ||--|| GoRun : uses
ServerHandler ||--|| GoBuild : compiles_with

TinyWasm ||--|| GoBuild : dual_builders

WatchHandler ||--|| FolderEvent : implements
WatchHandler ||--|| FileEvent : implements
WatchHandler ||--|| GoFileType : uses
WatchHandler ||--|| FSNotify : wraps

Browser ||--|| ChromeDP : uses

ServerHandler --|> FileEvent : implements
TinyWasm --|> FileEvent : implements
AssetMin --|> FileEvent : implements
AutoConfig --|> FolderEvent : implements

' Cross-cutting concerns
WatchHandler ..> ServerHandler : file_events
WatchHandler ..> TinyWasm : file_events
WatchHandler ..> AssetMin : file_events
WatchHandler ..> Browser : triggers_reload

note top of Handler : "Central orchestrator\nZero-configuration architecture\nUses cdvelop libraries"

note right of WatchHandler : "File system observer\nDebounced event handling\nFolderEvent + FileEvent support"

note left of AutoConfig : "Zero-configuration\nDirectory structure detection\nNo YAML files required"

@enduml
